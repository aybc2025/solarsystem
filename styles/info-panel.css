// מחלקת פאנל מידע על כוכבי הלכת - מתוקנת ומשופרת
class InfoPanel {
    constructor() {
        this.app = null;
        this.isVisible = false;
        this.currentPlanet = null;
        
        // אלמנטים
        this.elements = {
            panel: null,
            header: null,
            title: null,
            closeButton: null,
            content: null,
            preview: null,
            data: null,
            dataElements: new Map()
        };
        
        // אנימציות
        this.animations = {
            planetRotation: null,
            fadeIn: null,
            fadeOut: null
        };
        
        this.isInitialized = false;
    }

    // אתחול הפאנל
    async init(app) {
        try {
            this.app = app;
            
            // איתור או יצירת אלמנטים
            await this.findOrCreateElements();
            
            // הגדרת מאזיני אירועים
            this.setupEventListeners();
            
            // הכנת אנימציות
            this.setupAnimations();
            
            this.isInitialized = true;
            console.log('✅ Info Panel initialized successfully');
            
        } catch (error) {
            console.error('❌ Failed to initialize Info Panel:', error);
            throw error;
        }
    }

    // איתור או יצירת אלמנטים
    async findOrCreateElements() {
        // חיפוש פאנל קיים
        this.elements.panel = document.getElementById('infoPanel');
        
        // יצירת פאנל אם לא קיים
        if (!this.elements.panel) {
            await this.createInfoPanel();
        }
        
        // איתור אלמנטים פנימיים
        this.elements.header = this.elements.panel.querySelector('.info-header');
        this.elements.title = document.getElementById('planetName');
        this.elements.closeButton = this.elements.panel.querySelector('.close-btn');
        this.elements.content = this.elements.panel.querySelector('.info-content');
        this.elements.preview = document.getElementById('planetPreview');
        this.elements.data = document.getElementById('planetData');
        
        // איתור אלמנטי נתונים
        const dataIds = ['planetDistance', 'planetMass', 'planetRadius', 'planetPeriod', 'temperature'];
        dataIds.forEach(id => {
            const element = document.getElementById(id);
            if (element) {
                this.elements.dataElements.set(id, element);
            }
        });
        
        if (!this.elements.panel) {
            throw new Error('Info panel element not found and could not be created');
        }
    }

    // **הוספה: יצירת פאנל מידע**
    async createInfoPanel() {
        const panel = document.createElement('div');
        panel.id = 'infoPanel';
        panel.className = 'hidden';
        panel.innerHTML = `
            <div class="info-header">
                <h3 id="planetName">מידע על כוכב הלכת</h3>
                <button class="close-btn" title="סגור">&times;</button>
            </div>
            <div class="info-content">
                <div id="planetPreview" class="planet-image"></div>
                <div id="planetData" class="planet-data"></div>
            </div>
        `;
        
        document.body.appendChild(panel);
        this.elements.panel = panel;
        
        console.log('Info panel created');
    }

    // הגדרת מאזיני אירועים
    setupEventListeners() {
        // כפתור סגירה
        if (this.elements.closeButton) {
            this.elements.closeButton.addEventListener('click', () => {
                this.hide();
            });
        }
        
        // לחיצה מחוץ לפאנל (על הרקע)
        if (this.elements.panel) {
            this.elements.panel.addEventListener('click', (event) => {
                if (event.target === this.elements.panel) {
                    this.hide();
                }
            });
        }
        
        // מקש Escape
        document.addEventListener('keydown', (event) => {
            if (event.code === 'Escape' && this.isVisible) {
                this.hide();
            }
        });
        
        // **הוספה: אירועי אפליקציה**
        if (this.app) {
            // האזנה לבחירת כוכב לכת
            if (typeof this.app.on === 'function') {
                this.app.on('planetSelected', (data) => {
                    this.showPlanetInfo(data.planet);
                });
                
                this.app.on('planetDeselected', () => {
                    this.hide();
                });
            }
        }
    }

    // הכנת אנימציות
    setupAnimations() {
        // אנימציית סיבוב כוכב הלכת בתצוגה מקדימה
        if (this.elements.preview) {
            this.animations.planetRotation = {
                angle: 0,
                speed: 0.01,
                active: false
            };
        }
        
        // הגדרת אנימציות CSS
        this.setupCSSAnimations();
    }

    // **הוספה: הגדרת אנימציות CSS**
    setupCSSAnimations() {
        if (!this.elements.panel) return;
        
        // אנימציית כניסה
        this.animations.fadeIn = [
            { opacity: 0, transform: 'translate(-50%, -50%) scale(0.8)' },
            { opacity: 1, transform: 'translate(-50%, -50%) scale(1)' }
        ];
        
        // אנימציית יציאה
        this.animations.fadeOut = [
            { opacity: 1, transform: 'translate(-50%, -50%) scale(1)' },
            { opacity: 0, transform: 'translate(-50%, -50%) scale(0.8)' }
        ];
    }

    // **עדכון: הצגת מידע על כוכב לכת**
    showPlanetInfo(planetName) {
        const planetData = PLANETS_DATA[planetName];
        if (!planetData || !this.elements.panel) {
            console.warn('Cannot show planet info:', planetName);
            return;
        }
        
        this.currentPlanet = planetName;
        this.isVisible = true;
        
        // עדכון כותרת
        if (this.elements.title) {
            this.elements.title.textContent = planetData.name;
        }
        
        // עדכון תוכן
        this.updateContent(planetName, planetData);
        
        // הצגת הפאנל עם אנימציה
        this.show();
        
        console.log(`Showing info for: ${planetData.name}`);
    }

    // **עדכון: עדכון תוכן הפאנל**
    updateContent(planetName, planetData) {
        // עדכון תצוגה מקדימה
        this.updatePreview(planetName, planetData);
        
        // עדכון נתונים
        this.updateData(planetName, planetData);
    }

    // **עדכון: תצוגה מקדימה**
    updatePreview(planetName, planetData) {
        if (!this.elements.preview) return;
        
        const color = planetData.color ? `#${planetData.color.toString(16).padStart(6, '0')}` : '#888888';
        const darkerColor = this.darkenColor(color, 0.4);
        
        let previewHTML = `
            <div class="planet-sphere" style="
                background: radial-gradient(circle at 30% 30%, ${color}, ${darkerColor});
                box-shadow: inset -20px -20px 50px rgba(0,0,0,0.5), 0 0 20px ${color}40;
            ">
        `;
        
        // טבעות מיוחדות לשבתאי
        if (planetName === 'saturn') {
            previewHTML += `
                <div class="saturn-rings" style="
                    border-color: rgba(245, 245, 220, 0.6);
                    animation: ringRotate 30s linear infinite;
                "></div>
            `;
        }
        
        // אטמוספירה לכוכבי לכת מתאימים
        if (['venus', 'earth', 'mars', 'jupiter', 'saturn', 'uranus', 'neptune'].includes(planetName)) {
            const atmosphereColor = this.getAtmosphereColor(planetName);
            previewHTML += `
                <div style="
                    position: absolute;
                    top: -10px; left: -10px; right: -10px; bottom: -10px;
                    border-radius: 50%;
                    background: ${atmosphereColor};
                    opacity: 0.3;
                    pointer-events: none;
                "></div>
            `;
        }
        
        previewHTML += '</div>';
        this.elements.preview.innerHTML = previewHTML;
    }

    // **הוספה: קבלת צבע אטמוספירה**
    getAtmosphereColor(planetName) {
        const atmosphereColors = {
            venus: 'radial-gradient(circle, #FFF5AA, transparent)',
            earth: 'radial-gradient(circle, #87CEEB, transparent)',
            mars: 'radial-gradient(circle, #DEB887, transparent)',
            jupiter: 'radial-gradient(circle, #F4A460, transparent)',
            saturn: 'radial-gradient(circle, #F5DEB3, transparent)',
            uranus: 'radial-gradient(circle, #40E0D0, transparent)',
            neptune: 'radial-gradient(circle, #4169E1, transparent)'
        };
        
        return atmosphereColors[planetName] || 'radial-gradient(circle, #CCCCCC, transparent)';
    }

    // עדכון נתונים
    updateData(planetName, planetData) {
        if (!this.elements.data) return;
        
        // יצירת תוכן מפורט
        const content = this.generateDetailedContent(planetName, planetData);
        this.elements.data.innerHTML = content;
    }

    // **הוספה: יצירת תוכן מפורט**
    generateDetailedContent(planetName, planetData) {
        let content = `
            <div class="planet-description">
                <p>${planetData.description}</p>
            </div>
            
            <div class="planet-basic-data">
                <div class="data-item">
                    <span class="label">רדיוס:</span>
                    <span class="value">${planetData.radius?.toLocaleString() || 'לא ידוע'} ק"מ</span>
                </div>
        `;
        
        // נתונים בסיסיים
        if (planetData.distance) {
            const distanceAU = (planetData.distance / 149597870.7).toFixed(2);
            content += `
                <div class="data-item">
                    <span class="label">מרחק מהשמש:</span>
                    <span class="value">${(planetData.distance / 1e6).toFixed(1)} מיליון ק"מ (${distanceAU} AU)</span>
                </div>
            `;
        }
        
        if (planetData.orbitalPeriod) {
            const years = (planetData.orbitalPeriod / 365.25).toFixed(2);
            content += `
                <div class="data-item">
                    <span class="label">שנה:</span>
                    <span class="value">${planetData.orbitalPeriod.toFixed(0)} ימים (${years} שנות כדור ארץ)</span>
                </div>
            `;
        }
        
        if (planetData.rotationPeriod) {
            const hours = (Math.abs(planetData.rotationPeriod) * 24).toFixed(1);
            const direction = planetData.rotationPeriod < 0 ? ' (הפוך)' : '';
            content += `
                <div class="data-item">
                    <span class="label">יום:</span>
                    <span class="value">${hours} שעות${direction}</span>
                </div>
            `;
        }
        
        if (planetData.temperature) {
            content += `
                <div class="data-item">
                    <span class="label">טמפרטורה:</span>
                    <span class="value">${this.formatTemperature(planetData.temperature)}</span>
                </div>
            `;
        }
        
        if (planetData.moons !== undefined) {
            content += `
                <div class="data-item">
                    <span class="label">ירחים:</span>
                    <span class="value">${planetData.moons}</span>
                </div>
            `;
        }
        
        content += '</div>';
        
        // עובדות מעניינות
        if (planetData.facts && planetData.facts.length > 0) {
            content += `
                <div class="interesting-facts">
                    <h4>עובדות מעניינות</h4>
                    <ul>
                        ${planetData.facts.slice(0, 5).map(fact => `<li>${fact}</li>`).join('')}
                    </ul>
                </div>
            `;
        }
        
        // השוואה לכדור הארץ (אם לא כדור הארץ עצמו)
        if (planetName !== 'earth' && planetName !== 'sun') {
            content += this.generateEarthComparison(planetName, planetData);
        }
        
        // מידע על ירחים עיקריים
        if (planetData.majorMoons && planetData.majorMoons.length > 0) {
            content += `
                <div class="moons-info">
                    <h4>ירחים עיקריים</h4>
                    <div class="moons-list">
                        ${planetData.majorMoons.map(moon => `<span class="moon-item">${moon}</span>`).join('')}
                    </div>
                </div>
            `;
        }
        
        // חקירה חללית
        if (planetData.exploration && planetData.exploration.length > 0) {
            content += `
                <div class="exploration-info">
                    <h4>חקירה חללית</h4>
                    <ul class="exploration-list">
                        ${planetData.exploration.map(mission => `<li>${mission}</li>`).join('')}
                    </ul>
                </div>
            `;
        }
        
        return content;
    }

    // **הוספה: השוואה לכדור הארץ**
    generateEarthComparison(planetName, planetData) {
        const earthData = PLANETS_DATA.earth;
        let content = '<div class="earth-comparison"><h4>השוואה לכדור הארץ</h4><div class="comparison-grid">';
        
        // השוואת גודל
        if (planetData.radius && earthData.radius) {
            const ratio = planetData.radius / earthData.radius;
            const comparison = ratio > 1 ? 
                `גדול פי ${ratio.toFixed(1)}` : 
                `קטן פי ${(1/ratio).toFixed(1)}`;
            
            content += `
                <div class="comparison-item">
                    <span class="label">גודל:</span>
                    <span class="value">${comparison}</span>
                </div>
            `;
        }
        
        // השוואת מסה
        if (planetData.mass && earthData.mass) {
            const massRatio = planetData.mass / earthData.mass;
            const massComparison = massRatio > 1 ? 
                `כבד פי ${massRatio.toFixed(1)}` : 
                `קל פי ${(1/massRatio).toFixed(1)}`;
            
            content += `
                <div class="comparison-item">
                    <span class="label">מסה:</span>
                    <span class="value">${massComparison}</span>
                </div>
            `;
        }
        
        // השוואת שנה
        if (planetData.orbitalPeriod && earthData.orbitalPeriod) {
            const yearRatio = planetData.orbitalPeriod / earthData.orbitalPeriod;
            const yearComparison = yearRatio > 1 ? 
                `ארוכה פי ${yearRatio.toFixed(1)}` : 
                `קצרה פי ${(1/yearRatio).toFixed(1)}`;
            
            content += `
                <div class="comparison-item">
                    <span class="label">שנה:</span>
                    <span class="value">${yearComparison}</span>
                </div>
            `;
        }
        
        // השוואת יום
        if (planetData.rotationPeriod && earthData.rotationPeriod) {
            const dayRatio = Math.abs(planetData.rotationPeriod) / earthData.rotationPeriod;
            const dayComparison = dayRatio > 1 ? 
                `ארוך פי ${dayRatio.toFixed(1)}` : 
                `קצר פי ${(1/dayRatio).toFixed(1)}`;
            
            content += `
                <div class="comparison-item">
                    <span class="label">יום:</span>
                    <span class="value">${dayComparison}</span>
                </div>
            `;
        }
        
        content += '</div></div>';
        return content;
    }

    // פורמט טמפרטורה
    formatTemperature(temp) {
        if (typeof temp === 'number') {
            return `${temp}°C`;
        } else if (typeof temp === 'object' && temp !== null) {
            if (temp.avg !== undefined) return `${temp.avg}°C ממוצע`;
            if (temp.surface !== undefined) return `${temp.surface}°C פני השטח`;
            if (temp.min !== undefined && temp.max !== undefined) {
                return `${temp.min}°C עד ${temp.max}°C`;
            }
            if (temp.day !== undefined && temp.night !== undefined) {
                return `יום: ${temp.day}°C, לילה: ${temp.night}°C`;
            }
        }
        return 'לא ידוע';
    }

    // החשכת צבע
    darkenColor(color, factor) {
        const hex = color.replace('#', '');
        const r = Math.max(0, Math.floor(parseInt(hex.substr(0, 2), 16) * (1 - factor)));
        const g = Math.max(0, Math.floor(parseInt(hex.substr(2, 2), 16) * (1 - factor)));
        const b = Math.max(0, Math.floor(parseInt(hex.substr(4, 2), 16) * (1 - factor)));
        
        return `#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;
    }

    // הצגת הפאנל
    show() {
        if (!this.elements.panel) return;
        
        // הסרת מחלקת hidden
        this.elements.panel.classList.remove('hidden');
        
        // הוספת מחלקת צבע לפי כוכב הלכת
        if (this.currentPlanet) {
            this.elements.panel.className = `planet-${this.currentPlanet}`;
        }
        
        // אנימציית כניסה
        if (this.animations.fadeIn && this.elements.panel.animate) {
            this.elements.panel.animate(this.animations.fadeIn, {
                duration: 300,
                easing: 'cubic-bezier(0.175, 0.885, 0.32, 1.275)'
            });
        }
        
        this.isVisible = true;
        
        // התחלת אנימציית סיבוב אם יש תצוגה מקדימה
        this.startPlanetAnimation();
        
        console.log('Info panel shown');
    }

    // הסתרת הפאנל
    hide() {
        if (!this.elements.panel) return;
        
        // אנימציית יציאה
        if (this.animations.fadeOut && this.elements.panel.animate) {
            const animation = this.elements.panel.animate(this.animations.fadeOut, {
                duration: 200,
                easing: 'ease-in'
            });
            
            animation.addEventListener('finish', () => {
                this.elements.panel.classList.add('hidden');
            });
        } else {
            this.elements.panel.classList.add('hidden');
        }
        
        this.isVisible = false;
        this.currentPlanet = null;
        
        // עצירת אנימציות
        this.stopPlanetAnimation();
        
        console.log('Info panel hidden');
    }

    // **הוספה: התחלת אנימציית כוכב הלכת**
    startPlanetAnimation() {
        if (this.animations.planetRotation) {
            this.animations.planetRotation.active = true;
            this.animatePlanetRotation();
        }
    }

    // **הוספה: עצירת אנימציית כוכב הלכת**
    stopPlanetAnimation() {
        if (this.animations.planetRotation) {
            this.animations.planetRotation.active = false;
        }
    }

    // **הוספה: אנימציית סיבוב כוכב הלכת**
    animatePlanetRotation() {
        if (!this.animations.planetRotation.active) return;
        
        const planetSphere = this.elements.preview?.querySelector('.planet-sphere');
        if (planetSphere) {
            this.animations.planetRotation.angle += this.animations.planetRotation.speed;
            planetSphere.style.transform = `rotate(${this.animations.planetRotation.angle}rad)`;
        }
        
        if (this.animations.planetRotation.active) {
            requestAnimationFrame(() => this.animatePlanetRotation());
        }
    }

    // בדיקה אם הפאנל גלוי
    isShowing() {
        return this.isVisible;
    }

    // קבלת כוכב הלכת הנוכחי
    getCurrentPlanet() {
        return this.currentPlanet;
    }

    // **הוספה: החלפת כוכב לכת בלי סגירת הפאנל**
    switchPlanet(newPlanetName) {
        if (this.isVisible) {
            this.showPlanetInfo(newPlanetName);
        }
    }

    // **הוספה: עדכון מיקום הפאנל**
    updatePosition(x, y) {
        if (this.elements.panel && x !== undefined && y !== undefined) {
            this.elements.panel.style.left = `${x}px`;
            this.elements.panel.style.top = `${y}px`;
            this.elements.panel.style.transform = 'translate(-50%, -50%)';
        }
    }

    // **הוספה: הגדרת גודל הפאנל**
    setSize(width, height) {
        if (this.elements.panel) {
            if (width) this.elements.panel.style.width = typeof width === 'number' ? `${width}px` : width;
            if (height) this.elements.panel.style.height = typeof height === 'number' ? `${height}px` : height;
        }
    }

    // קבלת מידע מהיר
    getQuickInfo(planetName) {
        const planetData = PLANETS_DATA[planetName];
        if (!planetData) return null;
        
        return {
            name: planetData.name,
            nameEn: planetData.nameEn,
            description: planetData.description,
            quickFacts: planetData.facts?.slice(0, 3) || [],
            color: planetData.color,
            radius: planetData.radius,
            distance: planetData.distance
        };
    }

    // עדכון מצב מהאפליקציה
    syncWithApp() {
        if (this.app && this.app.state) {
            if (this.app.state.selectedPlanet && this.app.state.selectedPlanet !== this.currentPlanet) {
                this.showPlanetInfo(this.app.state.selectedPlanet);
            }
        }
    }

    // ניקוי משאבים
    dispose() {
        // עצירת אנימציות
        this.stopPlanetAnimation();
        
        // הסתרת הפאנל
        this.hide();
        
        // ניקוי הפניות
        this.currentPlanet = null;
        this.isVisible = false;
        this.app = null;
        
        // ניקוי אלמנטים
        Object.keys(this.elements).forEach(key => {
            if (key !== 'dataElements') {
                this.elements[key] = null;
            }
        });
        this.elements.dataElements.clear();
        
        this.isInitialized = false;
        
        console.log('Info panel disposed');
    }
}

// **הוספה: פונקציות עזר גלובליות**
const InfoPanelUtils = {
    // יצירת תוכן מהיר למידע על כוכב לכת
    createQuickContent(planetName) {
        const planetData = PLANETS_DATA[planetName];
        if (!planetData) return '';
        
        return `
            <div class="quick-info">
                <h3>${planetData.name}</h3>
                <p>${planetData.description}</p>
                ${planetData.facts ? `
                    <ul>
                        ${planetData.facts.slice(0, 2).map(fact => `<li>${fact}</li>`).join('')}
                    </ul>
                ` : ''}
            </div>
        `;
    },
    
    // פורמט מספרים גדולים
    formatLargeNumber(num) {
        if (num >= 1e9) return (num / 1e9).toFixed(1) + ' מיליארד';
        if (num >= 1e6) return (num / 1e6).toFixed(1) + ' מיליון';
        if (num >= 1e3) return (num / 1e3).toFixed(1) + ' אלף';
        return num.toLocaleString();
    },
    
    // קבלת אייקון לכוכב לכת
    getPlanetIcon(planetName) {
        const icons = {
            sun: '☀️',
            mercury: '☿️',
            venus: '♀️',
            earth: '🌍',
            mars: '♂️',
            jupiter: '♃',
            saturn: '♄',
            uranus: '♅',
            neptune: '♆'
        };
        
        return icons[planetName] || '🪐';
    }
};

// הפוך הכל זמין גלובלית
if (typeof window !== 'undefined') {
    window.InfoPanel = InfoPanel;
    window.InfoPanelUtils = InfoPanelUtils;
    
    // יצירת instance גלובלי
    window.infoPanel = new InfoPanel();
}
